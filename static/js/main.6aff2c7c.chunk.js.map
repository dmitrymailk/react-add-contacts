{"version":3,"sources":["components/layout/Header.js","components/pages/About.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","branding","react_default","a","createElement","className","href","react_router_dom","to","defaultProps","About","match","params","id","Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","item","payload","concat","toConsumableArray","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","name","email","phone","dispatch","setState","inherits","createClass","key","value","children","Component","Consumer","Contact","onShowClick","showInfo","onDeleteClick","_this2","_this$props$contacts","context","onClick","style","cursor","bind","float","color","Contacts","deleteContact","newContacts","Fragment","map","Contact_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onInput","field","e","defineProperty","target","onSubmit","preventDefault","_this$state","console","log","newContact","uuid","history","push","_this$state2","layout_TextInputGroup","NotFound","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8MAGMA,EAAS,SAAAC,GAAS,IAChBC,EAAaD,EAAbC,SACN,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2DACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAID,UAAU,gBACnBJ,GAEHC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,IAAIH,UAAU,YAAvB,SAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,eAAeH,UAAU,YAAlC,QAIFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,GAAG,SAASH,UAAU,YAA5B,eAWdN,EAAOU,aAAe,CACpBR,SAAU,UAOGF,QCzCA,SAASW,EAAMV,GAC5B,OACEE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,eAAuCL,EAAMW,MAAMC,OAAOC,IAC1DX,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,iCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mECLAS,EAAUC,IAAMC,gBAEhBC,EAAU,SAACC,EAAOC,GACtB,OAAQA,EAAOC,MACb,IAAK,iBACH,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAUL,EAAMK,SAASC,OAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAOM,EAAOO,YAE/D,IAAK,cACH,OAAOL,OAAAC,EAAA,EAAAD,CAAA,GACFH,EADL,CAEEK,SAAQ,CAAGJ,EAAOO,SAAVC,OAAAN,OAAAO,EAAA,EAAAP,CAAsBH,EAAMK,aAExC,QACE,OAAOL,IAIAW,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAX,OAAAY,EAAA,EAAAZ,CAAAa,KAAAL,GAAA,QAAAM,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAR,EAAAX,OAAAoB,EAAA,EAAApB,CAAAa,MAAAH,EAAAV,OAAAqB,EAAA,EAAArB,CAAAQ,IAAAc,KAAAC,MAAAb,EAAA,CAAAG,MAAAP,OAAAW,MACEpB,MAAQ,CACNK,SAAU,CACR,CACEV,GAAI,EACJgC,KAAM,SACNC,MAAO,kBACPC,MAAO,eAET,CACElC,GAAI,EACJgC,KAAM,SACNC,MAAO,kBACPC,MAAO,eAET,CACElC,GAAI,EACJgC,KAAM,SACNC,MAAO,kBACPC,MAAO,gBAGXC,SAAU,SAAA7B,GAAM,OAAIa,EAAKiB,SAAS,SAAA/B,GAAK,OAAID,EAAQC,EAAOC,OAtB9Da,EAAA,OAAAX,OAAA6B,EAAA,EAAA7B,CAAAQ,EAAAC,GAAAT,OAAA8B,EAAA,EAAA9B,CAAAQ,EAAA,EAAAuB,IAAA,SAAAC,MAAA,WA0BI,OAGEnD,EAAAC,EAAAC,cAACU,EAAQe,SAAT,CAAkBwB,MAAOnB,KAAKhB,OAC3BgB,KAAKlC,MAAMsD,cA9BpBzB,EAAA,CAA8B0B,aAqCfC,EADE1C,EAAQ0C,SCrDJC,cACnB,SAAAA,IAAc,IAAAzB,EAAA,OAAAX,OAAAY,EAAA,EAAAZ,CAAAa,KAAAuB,IACZzB,EAAAX,OAAAoB,EAAA,EAAApB,CAAAa,KAAAb,OAAAqB,EAAA,EAAArB,CAAAoC,GAAAd,KAAAT,QAKFwB,YAAc,WACZ1B,EAAKiB,SAAS,CACZU,UAAW3B,EAAKd,MAAMyC,YARZ3B,EAYd4B,cAAgB,SAAC/C,EAAImC,GACnBA,EAAS,CAAE5B,KAAM,iBAAkBM,QAASb,KAX5CmB,EAAKd,MAAQ,CACXyC,UAAU,GAHA3B,wEAeL,IAAA6B,EAAA3B,KAAA4B,EAC0B5B,KAAKlC,MAAMuB,SAAtCsB,EADCiB,EACDjB,KAAMC,EADLgB,EACKhB,MAAOC,EADZe,EACYf,MAAOlC,EADnBiD,EACmBjD,GACpB8C,EAAazB,KAAKhB,MAAlByC,SACN,OACEzD,EAAAC,EAAAC,cAAC2D,EAAD,KACG,SAAAV,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,UACGyC,EAAM,IACP3C,EAAAC,EAAAC,cAAA,KACE4D,QAASH,EAAKH,YACdrD,UAAU,mBACV4D,MAAO,CAAEC,OAAQ,aAEnBhE,EAAAC,EAAAC,cAAA,KACE4D,QAASH,EAAKD,cAAcO,KAAKN,EAAMhD,EAAImC,GAC3C3C,UAAU,eACV4D,MAAO,CAAEC,OAAQ,UAAWE,MAAO,QAASC,MAAO,UAGtDV,EACCzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwCyC,GACxC5C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,UAAwC0C,IAExC,eA3CmBQ,aCkCtBe,6MAhCbC,cAAgB,SAAA1D,GAAM,IAEd2D,EADexC,EAAKd,MAAlBK,SACqBC,OAAO,SAAAC,GAAI,OAAIA,EAAKZ,KAAOA,IACxDmB,EAAKiB,SAAS,CACZ1B,SAAUiD,6EAGL,IAAAX,EAAA3B,KACP,OACEhC,EAAAC,EAAAC,cAAC2D,EAAD,KACG,SAAAV,GAAS,IACA9B,EAAa8B,EAAb9B,SACR,OACErB,EAAAC,EAAAC,cAACF,EAAAC,EAAMsE,SAAP,KACEvE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,gBACCkB,EAASmD,IAAI,SAAAjD,GACZ,OACEvB,EAAAC,EAAAC,cAACuE,EAAD,CACEvB,IAAK3B,EAAKZ,GACVU,SAAUE,EACVmD,mBAAoBf,EAAKU,cAAcJ,KAAKN,EAAMpC,EAAKZ,kBArBpD0C,uDCDjBsB,EAAiB,SAAAC,GAQjB,IAPJC,EAOID,EAPJC,MACAlC,EAMIiC,EANJjC,KACAQ,EAKIyB,EALJzB,MACA2B,EAIIF,EAJJE,YACA5D,EAGI0D,EAHJ1D,KACA6D,EAEIH,EAFJG,SACAC,EACIJ,EADJI,MAEA,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAO+E,QAAQ,QAAQJ,GACvB7E,EAAAC,EAAAC,cAAA,SACEgB,KAAMA,EACNf,UAAW+E,IAAW,+BAAgC,CACpDC,aAAcH,IAEhBF,YAAaA,EACbnC,KAAMA,EACNQ,MAAOA,EACP4B,SAAUA,EAASd,KAAK,KAAMtB,KAE/BqC,GAAShF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoB6E,KAcnDL,EAAepE,aAAe,CAC5BW,KAAM,QAGOyD,QC4DAS,6MAlGbpE,MAAQ,CACN2B,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwC,OAAQ,MAGVC,QAAU,SAACC,EAAOC,GAChB1D,EAAKiB,SAAL5B,OAAAsE,EAAA,EAAAtE,CAAA,GACGoE,EAAQC,EAAEE,OAAOvC,WAItBwC,SAAW,SAAC7C,EAAU0C,GACpBA,EAAEI,iBADwB,IAAAC,EAEK/D,EAAKd,MAA5B2B,EAFkBkD,EAElBlD,KAAMC,EAFYiD,EAEZjD,MAAOC,EAFKgD,EAELhD,MAErB,GAAa,KAATF,EAIJ,GAAc,KAAVC,EAIJ,GAAc,KAAVC,EAAJ,CAIAiD,QAAQC,IAAIjE,EAAKd,MAAMqE,QACvB,IAAIW,EAAa,CACfrD,OACAC,QACAC,QACAlC,GAAIsF,OAENH,QAAQC,IAAIC,GACZlD,EAAS,CAAE5B,KAAM,cAAeM,QAASwE,IACzClE,EAAKiB,SAAS,CACZJ,KAAM,GACNC,MAAO,GACPC,MAAO,GACPwC,OAAQ,KAGVvD,EAAKhC,MAAMoG,QAAQC,KAAK,UAnBtBrE,EAAKiB,SAAS,CAAEsC,OAAQ,CAAExC,MAAO,4BAJjCf,EAAKiB,SAAS,CAAEsC,OAAQ,CAAEzC,MAAO,4BAJjCd,EAAKiB,SAAS,CAAEsC,OAAQ,CAAE1C,KAAM,+FA6B3B,IAAAgB,EAAA3B,KAAAoE,EACgCpE,KAAKhB,MAApC2B,EADDyD,EACCzD,KAAMC,EADPwD,EACOxD,MAAOC,EADduD,EACcvD,MAAOwC,EADrBe,EACqBf,OAC5B,OACErF,EAAAC,EAAAC,cAAC2D,EAAD,KACG,SAAAV,GAAS,IACAL,EAAaK,EAAbL,SACR,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,QAAMyF,SAAUhC,EAAKgC,SAAS1B,KAAKN,EAAMb,IACvC9C,EAAAC,EAAAC,cAACmG,EAAD,CACExB,MAAM,OACNlC,KAAK,OACLmC,YAAY,aACZ3B,MAAOR,EACPoC,SAAUpB,EAAK2B,QACfN,MAAOK,EAAO1C,OAEhB3C,EAAAC,EAAAC,cAACmG,EAAD,CACExB,MAAM,QACNlC,KAAK,QACLzB,KAAK,QACL4D,YAAY,cACZ3B,MAAOP,EACPmC,SAAUpB,EAAK2B,QACfN,MAAOK,EAAOzC,QAEhB5C,EAAAC,EAAAC,cAACmG,EAAD,CACExB,MAAM,QACNlC,KAAK,QACLmC,YAAY,cACZ3B,MAAON,EACPkC,SAAUpB,EAAK2B,QACfN,MAAOK,EAAOxC,QAEhB7C,EAAAC,EAAAC,cAAA,SACEgB,KAAK,SACLiC,MAAM,cACNhD,UAAU,wCAvFLkD,aCHV,SAASiD,IACtB,OACEtG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oDCyBSqG,MApBf,WACE,OACEvG,EAAAC,EAAAC,cAACsG,EAAD,KACExG,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAQoG,SAAUC,uBAChB1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACyG,EAAD,CAAQ5G,SAAS,oBACjBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,KACE5G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjCpE,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWvG,IAC1CR,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,UAAW3B,IAC5CpF,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAOG,UAAWT,UCTZU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS1G,MACvB,2DCZN2G,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6aff2c7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Header = props => {\r\n  let { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div className=\"\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My app\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Page #{props.match.params.id}</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">v 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(item => item.id !== action.payload)\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [\r\n      {\r\n        id: 1,\r\n        name: \"Name 1\",\r\n        email: \"email1@mail.com\",\r\n        phone: \"123-123-123\"\r\n      },\r\n      {\r\n        id: 2,\r\n        name: \"Name 2\",\r\n        email: \"email2@mail.com\",\r\n        phone: \"123-123-123\"\r\n      },\r\n      {\r\n        id: 3,\r\n        name: \"Name 3\",\r\n        email: \"email3@mail.com\",\r\n        phone: \"123-123-123\"\r\n      }\r\n    ],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      // value is property which allows to access from \"state\"\r\n      // in other components we can use only name \"value\" to access\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst Consumer = Context.Consumer;\r\nexport default Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Consumer from \"../../context\";\r\n\r\nexport default class Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showInfo: false\r\n    };\r\n  }\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showInfo: !this.state.showInfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = (id, dispatch) => {\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    let { name, email, phone, id } = this.props.contacts;\r\n    let { showInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                />\r\n              </h4>\r\n              {showInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contacts: PropTypes.object.isRequired,\r\n  deleteClickHandler: PropTypes.func.isRequired\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport Consumer from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contacts extends Component {\r\n  deleteContact = id => {\r\n    const { contacts } = this.state;\r\n    const newContacts = contacts.filter(item => item.id !== id);\r\n    this.setState({\r\n      contacts: newContacts\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4\">Contact List</h1>\r\n              {contacts.map(item => {\r\n                return (\r\n                  <Contact\r\n                    key={item.id}\r\n                    contacts={item}\r\n                    deleteClickHandler={this.deleteContact.bind(this, item.id)}\r\n                  />\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        name={name}\r\n        value={value}\r\n        onChange={onChange.bind(null, name)}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport Consumer from \"../../context\";\r\nimport uuid from \"uuid\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onInput = (field, e) => {\r\n    this.setState({\r\n      [field]: e.target.value\r\n    });\r\n  };\r\n\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required\" } });\r\n      return;\r\n    }\r\n    console.log(this.state.errors);\r\n    let newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n      id: uuid()\r\n    };\r\n    console.log(newContact);\r\n    dispatch({ type: \"ADD_CONTACT\", payload: newContact });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter name\"\r\n                    value={name}\r\n                    onChange={this.onInput}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onInput}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone\"\r\n                    value={phone}\r\n                    onChange={this.onInput}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1>Something wrong 404</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport NotFound from \"./components/pages/NotFound\";\n\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nfunction App() {\n  return (\n    <Provider>\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about/:id\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}